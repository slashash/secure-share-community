{
  "meta": {
    "options": {
      "linkedForm": "formResetPass"
    },
    "$_POST": [
      {
        "type": "text",
        "fieldName": "token",
        "options": {
          "rules": {}
        },
        "name": "token"
      },
      {
        "type": "text",
        "fieldName": "pass",
        "options": {
          "rules": {
            "core:minlength": {
              "param": 8
            }
          }
        },
        "name": "pass"
      },
      {
        "type": "text",
        "fieldName": "pass_confirm",
        "options": {
          "rules": {
            "core:equalTo": {
              "param": "pass"
            }
          }
        },
        "name": "pass_confirm"
      }
    ]
  },
  "exec": {
    "steps": {
      "name": "",
      "module": "core",
      "action": "trycatch",
      "options": {
        "try": {
          "steps": [
            {
              "name": "qCheckToken",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "db",
                "sql": {
                  "type": "select",
                  "columns": [
                    {
                      "table": "MU",
                      "column": "user_id"
                    }
                  ],
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{$_POST.token}}",
                      "test": ""
                    }
                  ],
                  "table": {
                    "name": "m_user",
                    "schema": "app",
                    "alias": "MU"
                  },
                  "primary": "user_id",
                  "joins": [],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "MU.pass_reset_token",
                        "field": "MU.pass_reset_token",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{$_POST.token}}",
                        "data": {
                          "table": "MU",
                          "column": "pass_reset_token",
                          "type": "text",
                          "columnObj": {
                            "type": "uuid",
                            "primary": false,
                            "unique": false,
                            "nullable": true,
                            "name": "pass_reset_token"
                          }
                        },
                        "operation": "=",
                        "table": "m_user"
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  },
                  "query": "select \"user_id\" from \"app\".\"m_user\" as \"MU\" where \"MU\".\"pass_reset_token\" = ?"
                }
              },
              "output": false,
              "meta": [
                {
                  "type": "text",
                  "name": "user_id"
                }
              ],
              "outputType": "object"
            },
            {
              "name": "",
              "module": "core",
              "action": "condition",
              "options": {
                "if": "{{!qCheckToken.user_id}}",
                "then": {
                  "steps": {
                    "name": "xLog",
                    "module": "SALog",
                    "action": "CreateLog",
                    "options": {
                      "connection": "db",
                      "logMode": true,
                      "inputParams": "{{$_POST.obfuscateJson('pass')}}",
                      "outputParams": "",
                      "serverActionName": "{{$_SERVER.PATH_INFO}}",
                      "requestURL": "{{$_SERVER.BASE_URL}}",
                      "errors": "",
                      "startedOn": "{{varStartTime}}",
                      "completedOn": "{{NOW_UTC}}",
                      "remarks": "",
                      "sessionGUID": "{{varSessionGUID}}",
                      "userIdentity": "{{identity}}",
                      "status": 400,
                      "response": "Token is invalid or expired."
                    },
                    "meta": [
                      {
                        "name": "log",
                        "type": "array"
                      }
                    ]
                  }
                },
                "else": {
                  "steps": [
                    {
                      "name": "hash",
                      "module": "crypto",
                      "action": "passwordHash",
                      "options": {
                        "password": "{{$_POST.pass}}",
                        "algo": "argon2id"
                      },
                      "outputType": "text"
                    },
                    {
                      "name": "uPass",
                      "module": "dbupdater",
                      "action": "update",
                      "options": {
                        "connection": "db",
                        "sql": {
                          "type": "update",
                          "values": [
                            {
                              "table": "m_user",
                              "column": "pass",
                              "type": "text",
                              "value": "{{hash}}"
                            },
                            {
                              "table": "m_user",
                              "column": "force_reset_pass",
                              "type": "boolean",
                              "value": "{{false}}"
                            },
                            {
                              "table": "m_user",
                              "column": "pass_reset_token_expiry",
                              "type": "datetime",
                              "value": "{{null}}"
                            },
                            {
                              "table": "app.m_user",
                              "column": "pass_reset_token",
                              "type": "text",
                              "value": "{{null}}"
                            }
                          ],
                          "table": "app.m_user",
                          "wheres": {
                            "condition": "OR",
                            "rules": [
                              {
                                "condition": "AND",
                                "rules": [
                                  {
                                    "id": "pass_reset_token",
                                    "field": "pass_reset_token",
                                    "type": "string",
                                    "operator": "equal",
                                    "value": "{{$_POST.token}}",
                                    "data": {
                                      "column": "pass_reset_token"
                                    },
                                    "operation": "="
                                  },
                                  {
                                    "id": "pass_reset_token_expiry",
                                    "field": "pass_reset_token_expiry",
                                    "type": "datetime",
                                    "operator": "greater_or_equal",
                                    "value": "{{NOW_UTC}}",
                                    "data": {
                                      "column": "pass_reset_token_expiry"
                                    },
                                    "operation": ">="
                                  }
                                ],
                                "conditional": "{{$_POST.token}}"
                              }
                            ],
                            "conditional": null,
                            "valid": true
                          },
                          "returning": "user_id",
                          "query": "update \"app\".\"m_user\" set \"pass\" = ?, \"force_reset_pass\" = ?, \"pass_reset_token_expiry\" = ?, \"pass_reset_token\" = ? where (\"pass_reset_token\" = ? and \"pass_reset_token_expiry\" >= ?) returning \"user_id\"",
                          "params": [
                            {
                              "name": ":P1",
                              "type": "expression",
                              "value": "{{hash}}",
                              "test": ""
                            },
                            {
                              "name": ":P2",
                              "type": "expression",
                              "value": "{{false}}",
                              "test": ""
                            },
                            {
                              "name": ":P3",
                              "type": "expression",
                              "value": "{{null}}",
                              "test": ""
                            },
                            {
                              "name": ":P4",
                              "type": "expression",
                              "value": "{{null}}",
                              "test": ""
                            },
                            {
                              "operator": "equal",
                              "type": "expression",
                              "name": ":P5",
                              "value": "{{$_POST.token}}",
                              "test": ""
                            },
                            {
                              "operator": "greater_or_equal",
                              "type": "expression",
                              "name": ":P6",
                              "value": "{{NOW_UTC}}",
                              "test": ""
                            }
                          ]
                        }
                      },
                      "meta": [
                        {
                          "name": "affected",
                          "type": "number"
                        }
                      ]
                    }
                  ]
                }
              },
              "outputType": "boolean"
            },
            {
              "name": "xLog",
              "module": "SALog",
              "action": "CreateLog",
              "options": {
                "connection": "db",
                "logMode": true,
                "inputParams": "{{$_POST.obfuscateJson('pass')}}",
                "outputParams": "",
                "serverActionName": "{{$_SERVER.PATH_INFO}}",
                "requestURL": "{{$_SERVER.BASE_URL}}",
                "errors": "",
                "startedOn": "{{varStartTime}}",
                "completedOn": "{{NOW_UTC}}",
                "remarks": "",
                "sessionGUID": "{{varSessionGUID}}",
                "userIdentity": "{{identity}}"
              },
              "meta": [
                {
                  "name": "log",
                  "type": "array"
                }
              ]
            }
          ]
        },
        "catch": {
          "steps": {
            "name": "xLogErr",
            "module": "SALog",
            "action": "CreateLog",
            "options": {
              "connection": "db",
              "logMode": true,
              "inputParams": "{{$_POST.obfuscateJson('pass')}}",
              "outputParams": "",
              "serverActionName": "{{$_SERVER.PATH_INFO}}",
              "requestURL": "{{$_SERVER.BASE_URL}}",
              "errors": "{{$_ERROR}}",
              "startedOn": "{{varStartTime}}",
              "completedOn": "{{NOW_UTC}}",
              "remarks": "",
              "status": 500,
              "response": "{{varError}}",
              "sessionGUID": "{{varSessionGUID}}",
              "userIdentity": "{{identity}}"
            },
            "meta": [
              {
                "name": "log",
                "type": "array"
              }
            ]
          }
        }
      }
    }
  },
  "usedModules": {
    "argon2": "^0.30.2"
  }
}