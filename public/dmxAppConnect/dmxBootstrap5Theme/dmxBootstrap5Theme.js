/*!
 App Connect Bootstrap 5 Theme
 Version: 2.0.1
 (c) 2024 Wappler.io
 @build 2024-06-18 12:02:54
 */
dmx.Component("bs5-theme",{initialData:{theme:"auto",active:"light",detected:"light"},attributes:{key:{type:String,default:"theme"},theme:{type:String,default:"auto",enum:["auto","light","dark"]}},methods:{setTheme(e){this.props.theme=e,this.performUpdate()}},render:!1,init(){this._changeHandler=this._changeHandler.bind(this),this._mediaQuery=window.matchMedia("(prefers-color-scheme: dark)"),this._mediaQuery.addEventListener("change",this._changeHandler),this.props.theme=this._getStoredTheme()||this.props.theme,this._update()},destroy(){this._mediaQuery.removeEventListener("change",this._changeHandler)},performUpdate(){this._setStoredTheme(this.props.theme),this._update()},_update(){const e=this._mediaQuery.matches?"dark":"light",t="auto"===this.props.theme?e:this.props.theme;document.documentElement.setAttribute("data-bs-theme",t),this.set("theme",this.props.theme),this.set("active",t),this.set("detected",e)},_changeHandler(e){this._update()},_getStoredTheme(){return localStorage.getItem(this.props.key)},_setStoredTheme(e){localStorage.setItem(this.props.key,e)}}),dmx.Component("bs5-theme-switch",{attributes:{icons:{type:String,default:"bi",enum:["bi","fa"]},textDark:{type:String,default:"Dark"},textLight:{type:String,default:"Light"},textAuto:{type:String,default:"Auto"},manager:{type:String,default:""}},events:{change:Event},init(e){this._icons={bi:{auto:"bi-circle-half",check:"bi-check2",dark:"bi-moon-stars-fill",light:"bi-sun-fill"},fa:{auto:"fa-adjust",check:"fa-check",dark:"fa-moon fa-moon-o",light:"fa-sun fa-sun-o"}},this._prefix=e.id,this.props.theme="auto",this.props.manager&&this.$watch(`${this.props.manager}.theme`,(e=>{this.props.theme=e}))},render(e){const t=this._icons[this.props.icons],s=e.classList.contains("nav-item")||e.parentNode.classList.contains("nav-item");e.classList.add("dropdown"),e.innerHTML=`\n      <button class="btn ${s?"btn-link nav-link":"btn-primary"} py-2 dropdown-toggle d-flex align-items-center" id="${this._prefix}-theme" type="button" aria-expanded="false" data-bs-toggle="dropdown" aria-label="Toggle theme (auto)">\n        <i class="${this.props.icons} ${t.auto} ${"fa"==this.props.icons?"my-1":""} theme-icon-active"></i>\n        <span class="visually-hidden" id="${this._prefix}-theme-text">Toggle theme</span>\n      </button>\n      <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="${this._prefix}-theme-text">\n        <li>\n          <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="light" aria-pressed="false">\n            <i class="${this.props.icons} ${t.light} me-2 opacity-50"></i>\n            ${this.props.textLight}\n            <i class="${this.props.icons} ${t.check} ms-auto d-none"></i>\n          </button>\n        </li>\n        <li>\n          <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="dark" aria-pressed="false">\n            <i class="${this.props.icons} ${t.dark} me-2 opacity-50"></i>\n             ${this.props.textDark}\n            <i class="${this.props.icons} ${t.check} ms-auto d-none"></i>\n          </button>\n        </li>\n        <li>\n          <button type="button" class="dropdown-item d-flex align-items-center" data-bs-theme-value="auto" aria-pressed="true">\n            <i class="${this.props.icons} ${t.auto} me-2 opacity-50"></i>\n             ${this.props.textAuto}\n            <i class="${this.props.icons} ${t.check} ms-auto d-none"></i>\n          </button>\n        </li>\n      </ul>\n    `,e.querySelectorAll("[data-bs-theme-value]").forEach((t=>{t.addEventListener("click",(()=>{this.props.theme=t.getAttribute("data-bs-theme-value"),this._setTheme(this.props.theme),e.querySelector(`#${this._prefix}-theme`).focus()}))})),this.performUpdate(new Map)},performUpdate(e){const t=this._icons[this.props.icons];this.$node.querySelectorAll("[data-bs-theme-value]").forEach((e=>{e.getAttribute("data-bs-theme-value")===this.props.theme?(e.classList.add("active"),e.setAttribute("aria-pressed","true"),e.querySelector("."+t.check).classList.remove("d-none")):(e.classList.remove("active"),e.setAttribute("aria-pressed","false"),e.querySelector("."+t.check).classList.add("d-none"))}));const s=this.$node.querySelector(".theme-icon-active");Object.values(t).forEach((e=>s.classList.remove(...e.split(" ")))),s.classList.add(...t[this.props.theme].split(" "));this.$node.querySelector(`#${this._prefix}-theme`).setAttribute("aria-label",`Toggle theme (${this.props.theme})`),e.has("manager")&&this.props.manager&&(this._watcher&&this._watcher(),this._watcher=dmx.effect((()=>{this.props.theme=this.parse(`${this.props.manager}.theme`)})))},destroy(){this._watcher&&this._watcher()},_setTheme(e){this.props.manager&&this.parse(`${this.props.manager}.setTheme("${e}")`),this.dispatchEvent("change",{},{theme:e})}});
//# sourceMappingURL=dmxBootstrap5Theme.js.map
